{"version":3,"sources":["felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/LinkEdgeTypeSubscriber.js"],"names":["_AbstractRefEdgeTypeSubscriber","require","LinkEdgeTypeSubscriber","allEdgeTypes","options","arguments","length","undefined","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","_extends","priority","edgeType","id","tObj","toWL","typeWL","toRefs","$tw","wiki","getTiddlerLinks","fields","title","tw-body:link"],"mappings":"gjBAWA,IAAAA,gCAAAC,QAAA;;;;;;;;;;GAUMC,kDAKJ,SAAAA,GAAYC,GAA4B,GAAdC,GAAcC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,KAAAG,iBAAAC,KAAAP,EAAA,OAAAQ,4BAAAD,MAAAP,EAAAS,WAAAC,OAAAC,eAAAX,IAAAY,KAAAL,KAChCN,EADgCY,UAChBC,SAAU,IAAOZ,uDAM/Ba,GAER,MAAOA,GAASC,KAAO,uDAOXC,EAAMC,EAAMC,GAExB,GAAIA,IAAWA,EAAO,gBAAiB,CACrC,OAGF,GAAIC,GAASC,IAAIC,KAAKC,gBAAgBN,EAAKO,OAAOC,MAElD,KAAKL,IAAWA,EAAOhB,OAAQ,CAxBO,OAIxC,OAAAsB,eAAAN,kEA+BOpB,uBAAAA","file":"../../../../../../felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/LinkEdgeTypeSubscriber.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/modules/edge-type-handler/body/link\ntype: application/javascript\nmodule-type: tmap.edgetypehandler\n\n@preserve\n\n\\*/\n\nimport AbstractRefEdgeTypeSubscriber from '$:/plugins/felixhayashi/tiddlymap/js/AbstractRefEdgeTypeSubscriber';\n\n/**\n * The LinkEdgeTypeSubscriber deals with connections that are stored inside\n * a tiddler' text field.\n *\n * Note: This subscriber only retrieves edges, however doesn't store or delete them.\n *\n * @see http://tiddlymap.org/#tw-body\n */\nclass LinkEdgeTypeSubscriber extends AbstractRefEdgeTypeSubscriber {\n\n  /**\n   * @inheritDoc\n   */\n  constructor(allEdgeTypes, options = {}) {\n    super(allEdgeTypes, { priority: 20, ...options });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canHandle(edgeType) {\n\n    return edgeType.id === 'tw-body:link';\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReferences(tObj, toWL, typeWL) {\n\n    if (typeWL && !typeWL['tw-body:link']) {\n      return;\n    }\n\n    var toRefs = $tw.wiki.getTiddlerLinks(tObj.fields.title);\n\n    if (!toRefs || !toRefs.length) {\n      return;\n    }\n\n    return { 'tw-body:link': toRefs };\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport { LinkEdgeTypeSubscriber };\n"],"sourceRoot":"../../../../../../../src/plugins"}