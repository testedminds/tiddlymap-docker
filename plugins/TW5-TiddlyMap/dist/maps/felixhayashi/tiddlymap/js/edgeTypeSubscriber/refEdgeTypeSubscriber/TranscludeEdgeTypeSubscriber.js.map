{"version":3,"sources":["felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/TranscludeEdgeTypeSubscriber.js"],"names":["_AbstractRefEdgeTypeSubscriber","require","TranscludeEdgeTypeSubscriber","allEdgeTypes","options","arguments","length","undefined","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","_extends","priority","ignore","$tw","wiki","getTiddlerTranscludes","edgeType","id","tObj","toWL","typeWL","fields","title","toRefs","tw-body:transclude"],"mappings":"sjBAWA,IAAAA,gCAAAC,QAAA;;;;;;;;;;GAQMC,wDAKJ,SAAAA,GAAYC,GAA4B,GAAdC,GAAcC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,KAAAG,iBAAAC,KAAAP,EAAA,OAAAQ,4BAAAD,MAAAP,EAAAS,WAAAC,OAAAC,eAAAX,IAAAY,KAAAL,KAChCN,EADgCY,UAEpCC,SAAU,GACVC,aAAgBC,KAAIC,KAAKC,wBAA0B,YAChDhB,uDAOGiB,GAER,MAAOA,GAASC,KAAO,6DAbzBC,EAAAC,EAAAC,GAsBE,GAAIA,IAAWA,EAAO,sBAAuB,CAtBP,OAEpCT,GAAAA,GAAUE,IAF0BC,KAAAC,sBAAAG,EAAAG,OAAAC,MAAA,KAIjCvB,IAJiCwB,EAAAtB,OAAA,CAMvC,OA0BC,OAASuB,qBAAsBD,kEAO1B1B,6BAAAA","file":"../../../../../../felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/TranscludeEdgeTypeSubscriber.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/modules/edge-type-handler/body/transclude\ntype: application/javascript\nmodule-type: tmap.edgetypehandler\n\n@preserve\n\n\\*/\n\nimport AbstractRefEdgeTypeSubscriber from '$:/plugins/felixhayashi/tiddlymap/js/AbstractRefEdgeTypeSubscriber';\n\n/**\n * The TranscludeEdgeTypeSubscriber retrieves connections that result tiddler transclusions.\n *\n * Note: This subscriber only retrieves edges, however doesn't store or delete them. It only\n * works if the `$tw.wiki.getTiddlerTranscludes` method is present in the wiki.\n */\nclass TranscludeEdgeTypeSubscriber extends AbstractRefEdgeTypeSubscriber {\n\n  /**\n   * @inheritDoc\n   */\n  constructor(allEdgeTypes, options = {}) {\n    super(allEdgeTypes, {\n      priority: 20,\n      ignore: (typeof $tw.wiki.getTiddlerTranscludes !== 'function'),\n      ...options,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canHandle(edgeType) {\n\n    return edgeType.id === 'tw-body:transclude';\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReferences(tObj, toWL, typeWL) {\n\n    if (typeWL && !typeWL['tw-body:transclude']) {\n      return;\n    }\n\n    var toRefs = $tw.wiki.getTiddlerTranscludes(tObj.fields.title);\n\n    if (!toRefs || !toRefs.length) {\n      return;\n    }\n\n    return { 'tw-body:transclude': toRefs };\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport { TranscludeEdgeTypeSubscriber };\n"],"sourceRoot":"../../../../../../../src/plugins"}