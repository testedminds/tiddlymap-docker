{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/Popup.js"],"names":["_utils","require","Popup","parentDomNode","options","_domNode","this","className","document","createElement","_parentDomNode","appendChild","$tw","utils","addClass","_isEnabled","_isPreventShowOrHide","_timeoutShow","_timeoutHide","_isDisplayNoneAfterAnimation","val","leavingDelay","parseInt","hideDelay","_hideDelay","_utils2","default","isInteger","showDelay","_showDelay","bindTo","_listeners","mouseenter","setDomListeners","mouseleave","_handleLeave","click","_handleClick","fn","_handleAnimationEnd","convertEventName","prototype","_handleEnter","ev","hide","_hideDelayLeavingPopup","_isHideOnClick","_hide","style","display","isForce","removeClass","_show","signature","text","$tm","mouse","ctrlKey","removeAttribute","removeDOMChildNodes","div","innerHTML","childNodes","x","clientX","parRect","getBoundingClientRect","y","clientY","availSpaceLeft","popRect","availSpaceRight","right","width","availSpaceBottom","bottom","availSpaceTop","height","shiftLeft","spawnRight","top","shiftTop","spawnBottom","left","_clearTimeouts","delay","setTimeout","isEnabled","isShown","clearTimeout","undefined"],"mappings":"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","file":"../../../../../felixhayashi/tiddlymap/js/lib/Popup.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/Popup\ntype: application/javascript\nmodule-type: library\n\n@preserve\n\n\\*/\n\n/*** Imports *******************************************************/\n\nimport utils from '$:/plugins/felixhayashi/tiddlymap/js/utils';\n\n/**** Code *********************************************************/\n\n/**\n * Installs a hidden popup below `parentDomNode` that may be shown\n * and or hidden.\n *\n * @constructor\n *\n * @param {Element} [parentDomNode] - The popup container. The\n *    popup will create itself in this container.\n * @param {Hashmap} [options] - An options object.\n * @param {string} [options.className] - A classname to be added to\n *    the popup div.\n * @param {int} [options.delay] - The default delay for the popup\n *    show and hide.\n */\nfunction Popup(parentDomNode, options) {\n\n  options = options || {};\n\n  this._parentDomNode = parentDomNode;\n  this._domNode = document.createElement('div');\n  this._domNode.style.display = 'none';\n  this._domNode.className = 'tmap-popup';\n\n  this._parentDomNode.appendChild(this._domNode);\n  $tw.utils.addClass(this._domNode, options.className);\n\n  this._isEnabled = true;\n  this._isPreventShowOrHide = false;\n  this._isHideOnClick = !!options.hideOnClick;\n  this._timeoutShow = null;\n  this._timeoutHide = null;\n  this._isDisplayNoneAfterAnimation = true;\n\n  // delays\n  let val = parseInt(options.leavingDelay);\n  this._hideDelayLeavingPopup = utils.isInteger(val) ? val : 200;\n\n  val = parseInt(options.hideDelay);\n  this._hideDelay = utils.isInteger(val) ? val : 200;\n\n  val = parseInt(options.showDelay);\n  this._showDelay = utils.isInteger(val) ? val : 200;\n\n  // force early binding of functions to this context\n  utils.bindTo(this, [\n    '_show',\n    '_hide',\n    '_handleEnter',\n    '_handleLeave',\n    '_handleAnimationEnd',\n    '_handleClick'\n  ]);\n\n  // specify handlers\n  this._listeners = {\n    'mouseenter': this._handleEnter,\n    'mouseleave': this._handleLeave,\n    'click': [ this._handleClick, true ]\n  };\n\n  const fn = this._handleAnimationEnd;\n  this._listeners[$tw.utils.convertEventName('animationEnd')] = fn;\n  this._listeners[$tw.utils.convertEventName('transitionEnd')] = fn;\n\n  // add handlers\n  utils.setDomListeners('add', this._domNode, this._listeners, false);\n\n}\n\n/**\n * When the mouse is inside the popup, the popup will manage closing\n * itself and ignore all closing attempts from outside.\n */\nPopup.prototype._handleEnter = function(ev) {\n\n  //~ console.log(\"_handleEnter\");\n\n  this._isPreventShowOrHide = true;\n\n};\n\n/**\n * Handler triggered when leaving the popup div.\n */\nPopup.prototype._handleLeave = function(ev) {\n\n  //~ console.log(\"_handleLeave\");\n\n  this._isPreventShowOrHide = false;\n\n  // we need some delay because resizing may cause the mouse to\n  // exit the popup for some miliseconds\n\n  this.hide(this._hideDelayLeavingPopup);\n\n};\n\nPopup.prototype._handleClick = function(ev) {\n\n  //~ console.log(\"_handleLeave\");\n\n  if (this._isHideOnClick) {\n    this._hide(true);\n  }\n\n};\n\n/**\n * Handler triggered when leaving the popup div.\n */\nPopup.prototype._handleAnimationEnd = function() {\n\n  if (this._isDisplayNoneAfterAnimation) {\n    //~ console.log(\"display: none\");\n    this._domNode.style.display = 'none';\n  }\n\n};\n\n/**\n * Immediately hides the popup.\n */\nPopup.prototype._hide = function(isForce) {\n\n  //~ console.log(\"_hide\");\n\n  if (!isForce && this._isPreventShowOrHide) return;\n\n  //~ console.log(\"_hide SUCCESS\");\n\n  this._isDisplayNoneAfterAnimation = true;\n  this._isPreventShowOrHide = false;\n\n  $tw.utils.removeClass(this._domNode, 'tmap-popup-active');\n\n};\n\n/**\n * Makes the text visible as popup and registers it with the\n * given signature.\n *\n * The popup is spawned on the side that has the most space.\n *\n * @param {*} signature - The signature that has been\n *     passed to {@link show}.\n */\nPopup.prototype._show = function(signature, text) {\n\n  //~ console.log(\"_show\");\n\n  if (this._isPreventShowOrHide || $tm.mouse.ctrlKey || !this._isEnabled) {\n    return;\n  }\n\n  this._domNode.style.display = 'none';\n  $tw.utils.removeClass(this._domNode, 'tmap-popup-active');\n\n  // remove any positioning or modification done before\n  this._domNode.removeAttribute('style');\n\n  // remove any previous content\n  utils.removeDOMChildNodes(this._domNode);\n  var div = this._domNode.appendChild(document.createElement('div'));\n\n  if (typeof text === 'function') {\n    text(signature, div);\n  } else {\n    div.innerHTML = text;\n  }\n\n  if (!div.childNodes.length) return;\n\n  var parRect = this._parentDomNode.getBoundingClientRect();\n  var x = $tm.mouse.clientX;\n  var y = $tm.mouse.clientY;\n\n  //~ console.log(\"_show SUCCESS\");\n\n  // ATTENTION: display needs to be true before we can get the bounds!\n\n  // make sure that display is block so the animation is executed\n  // and we can retrieve the size of the div.\n  this._domNode.style.display = 'block';\n\n  var popRect = this._domNode.getBoundingClientRect();\n\n  var availSpaceRight = parRect.right - (x + popRect.width);\n  var availSpaceLeft = (x - popRect.width) - parRect.left;\n  var spawnRight = availSpaceRight > availSpaceLeft;\n\n  var availSpaceBottom = parRect.bottom - (y + popRect.height);\n  var availSpaceTop = (y - popRect.height) - parRect.top;\n  var spawnBottom = availSpaceBottom > availSpaceTop;\n\n  var shiftLeft = spawnRight ? -15 : popRect.width + 15;\n  var shiftTop = spawnBottom ? -15 : popRect.height + 15;\n\n  this._domNode.style.left = (x - parRect.left - shiftLeft) + 'px';\n  this._domNode.style.top = (y - parRect.top - shiftTop) + 'px';\n\n  // …and make sure that it stays block after the animation is done…\n  this._isDisplayNoneAfterAnimation = false;\n  // …and add the class that triggers the animation…\n  $tw.utils.addClass(this._domNode, 'tmap-popup-active');\n\n};\n\n/**\n * Makes the text visible as popup after a given delay and\n * registers the popup under the specified signature.\n *\n * @param {*} signature - If {@param text} is provided as param and\n *     is a function, then this will be passed later as argument to\n *     text. It therefore acts as means to identify the popup later\n *     on or pass data that survives the delay.\n * @param {string|Function} text - If text\n *     is a string, it will be shown in the popup, otherwise,\n *     if text is a function, it will be executed and it is\n *     expected to populate the popup div passed as second parameter;\n *     the first parameter will be the signature object.\n * @param{delay} delay - Delays the hide operation.\n */\nPopup.prototype.show = function(signature, text, delay) {\n\n  //~ console.log(\"show\", delay);\n\n  this._clearTimeouts();\n\n  delay = (utils.isInteger(delay) ? delay : this._showDelay);\n\n  // start a new timeout\n  this._timeoutShow = setTimeout(this._show, delay, signature, text);\n\n};\n\n/**\n * Hide the popup.\n *\n * @param {int} delay - Delays the hide operation.\n */\nPopup.prototype.hide = function(delay, isForce) {\n\n  //~ console.log(\"hide\", delay);\n\n  this._clearTimeouts();\n\n  delay = (utils.isInteger(delay) ? delay : this._hideDelay);\n\n  if (isForce || delay === 0) { // @TODO is this really correct?\n    this._hide(isForce);\n  } else {\n    this._timeoutHide = setTimeout(this._hide, delay, isForce);\n  }\n\n};\n\n/**\n * Completely enable or disable the popup\n */\nPopup.prototype.setEnabled = function(isEnabled) {\n  this._isEnabled = isEnabled;\n};\n\nPopup.prototype.isShown = function() {\n  return this._domNode.style.display === 'block';\n};\n\nPopup.prototype._clearTimeouts = function() {\n\n  clearTimeout(this._timeoutShow);\n  clearTimeout(this._timeoutHide);\n\n  this._timeoutShow = undefined;\n  this._timeoutHide = undefined;\n\n};\n\n\n/*** Exports *******************************************************/\n\nexport default Popup;\n"],"sourceRoot":"../../../../../../src/plugins"}