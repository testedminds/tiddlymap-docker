{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/SelectionRectangle.js"],"names":["SelectionRectangle","x","y","_classCallCheck","this","x2","y1","y2","x1","getWidth","getHeight","_ref","mostLeft","Math","min","mostRight","max","mostBottom","mostTop"],"mappings":";;;;;;;;;;;GA0BMA,+BAQJ,QAAAA,GAAYC,EAAGC,GAAGC,gBAAAC,KAAAJ,EARdA,MAAAA,GAAAA,CAWFI,MAAKC,GAAKJ,CAEVG,MAAKE,GAAKJ,CACVE,MAAKG,GAAKL,+CADVD,EAAKK,GAGNF,KAAAC,GAAAJ,CAWCG,MAAKG,GAAKL,uCASV,MAAOE,MAAKC,GAAKD,KAAKI,yCAStB,MAAOJ,MAAKG,GAAKH,KAAKE,uCAStB,OAASF,KAAKI,GAAIJ,KAAKE,GAAIF,KAAKK,WAAYL,KAAKM,wDAThC,GAALH,GAAKI,EAALJ,EAALL,EAAUS,EAAVT,CAAU,IAoBTM,GAAmBJ,KAAnBI,GAAIH,EAAeD,KAAfC,GAAIC,EAAWF,KAAXE,GAAIC,EAAOH,KAAPG,EAEpB,IAAMK,GAAWC,KAAKC,IAAIN,EAAIH,EAC9B,IAAMU,GAAYF,KAAKG,IAAIR,EAAIH,EAC/B,IAAMY,GAAaJ,KAAKC,IAAIR,EAAIC,EAChC,IAAMW,GAAUL,KAAKG,IAAIV,EAAIC,EAE7B,OAAOK,GAAWX,GAAKA,EApBfc,GAAAE,EAAAf,GAAAA,EAAAgB,kCA2BGlB","file":"../../../../../felixhayashi/tiddlymap/js/lib/SelectionRectangle.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/lib/SelectionRectangle\ntype: application/SelectionRectangle\nmodule-type: library\n\n@preserve\n\n\\*/\n\n/**** Code *********************************************************/\n\n/**\n * Represents a rectangle spanned by mouse selection\n *\n * @constructor\n *\n * @param {Element} [parentDomNode] - The popup container. The\n *    popup will create itself in this container.\n * @param {Hashmap} [options] - An options object.\n * @param {string} [options.className] - A classname to be added to\n *    the popup div.\n * @param {int} [options.delay] - The default delay for the popup\n *    show and hide.\n */\nclass SelectionRectangle {\n\n  /**\n   * Sets up the selection with the specified initial offset.\n   *\n   * @param {number} x - offset x\n   * @param {number} y - offset y\n   */\n  constructor(x, y) {\n\n    this.x1 = x;\n    this.x2 = x;\n\n    this.y1 = y;\n    this.y2 = y;\n\n  }\n\n  /**\n   * Spans the selection.\n   *\n   * @param {number} x - x coordinate\n   * @param {number} y - y coordinate\n   */\n  span(x, y) {\n\n    this.x2 = x;\n    this.y2 = y;\n\n  }\n\n  /**\n   * @return {number} width\n   */\n  getWidth() {\n\n    return this.x2 - this.x1;\n\n  }\n\n  /**\n   * @return {number} height\n   */\n  getHeight() {\n\n    return this.y2 - this.y1;\n\n  }\n\n  /**\n   * @return {array} an array holding the following data in sequence: x, y, width, height\n   */\n  getRect() {\n\n    return [ this.x1, this.y1, this.getWidth(), this.getHeight() ];\n\n  }\n\n  /**\n   * @param {number} x - x coordinate\n   * @param {number} y - y coordinate\n   * @return {boolean}\n   */\n  isPointWithin({ x, y} ) {\n\n    const { x1, x2, y1, y2 } = this;\n\n    const mostLeft = Math.min(x1, x2);\n    const mostRight = Math.max(x1, x2);\n    const mostBottom = Math.min(y1, y2);\n    const mostTop = Math.max(y1, y2);\n\n    return mostLeft < x && x < mostRight && mostBottom < y && y < mostTop;\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport default SelectionRectangle;\n"],"sourceRoot":"../../../../../../src/plugins"}