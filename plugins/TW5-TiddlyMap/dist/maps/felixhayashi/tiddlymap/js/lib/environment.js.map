{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/environment.js"],"names":["path","pluginRoot","edgeTypes","nodeTypes","views","options","dialogs","footers","tempRoot","ref","tempStates","tempPopups","localHolders","welcomeFlag","focusButton","sysMeta","liveTab","defaultViewHolder","graphBar","mainEditor","sidebarBreakpoint","mainEditorId","arrows","in","out","bi","config","unknownEdgeLabel","liveViewLabel","defaultViewLabel","viewMarker","sys","misc","nodeLabel","nodeIcon","nodeInfo","popups","fallbackView","width","suppressedDialogs","debug","notifications","enabled","delay","height","showNeighScopeButton","showRasterMenuButton","showScreenshotButton","field","defaultEdgeTypeFilter","allSelector","allEdgeTypes","filter","allNodeTypes","allViews","allPotentialNodes","selector","s"],"mappings":";;;;;;;;;;;AAyBO,GAAMA,MAAAA,QAAAA,MACXC,WAAiB,oCACjBC,UAAiB,oDACjBC,UAAiB,oDACjBC,MAAiB,gDACjBC,QAAiB,2CACjBC,QAAiB,2CAPnBC,QAAA,iDACOC,SAAMR,eACXC,WAAiB,qBACjBC,WAAiB,2BACjBC,aAAiB,uBAIjBI,IAAiBE,KAAAA,QAAAA,KACjBD,kBAAiB,2DACjBE,SAAiB,2DACjBC,YAAiB,oDACjBC,YAAiB,oDAXZC,YAAA,iDAqBLC,YAAoB,qDAPtBC,QAAA,8CACOC,QAAMP,iDACXQ,WAAoB,gDACpBC,kBAAoB,yDAIpBJ,IAAAA,MAAAA,QAAAA,MAEAE,iBAAoB,iBACpBG,cAAoB,YACpBC,iBAAAA,UAVKC,aAAA,cAoBLC,QAAUC,GAAM,IAAKC,IAAO,IAAKC,GAAM,KALvC,IAAAC,QAAAA,QAAAA,QACAC,KACAC,OACAC,UAAAA,UACAR,SAAc,OACdC,SAAU,cANLQ,WAAA,UASMJ,SACXK,aAAKC,KAAAJ,eAEDK,qBACAC,mBAFK,UAGLC,MAAAA,QACAL,cAAY,OAJPM,QAMPpB,QAAS,OACPqB,MAAAA,MARCC,MAAA,QAUHC,OAAAA,SAEAC,gBAZG,IAaHC,iBAAe,QACfL,gBAAQ,QACNM,eACAC,qBAFM,OAGNL,qBAHM,OAINM,qBAAQ,SAMRC,IAAAA,QAAAA,QAAAA,QACAC,UAAAA,WAAAA,KAAsB3C,UAAtB2C,KACAC,UAAAA,WAAAA,KAAsB7C,UAAtB6C,KAHa3C,MAAAA,IAAAsB,OAAAK,IAAAiB,MAAAlB,WAAA,UAvBZmB,sBAAA,qEA+BP,IAAAC,aAAA,uCAKED,IAAAA,IAJKE,aAAAD,YAAA,KAAAE,OAAAlD,UAcLmD,aAAiBH,YAAjB,KAAiCE,OAAOjD,UAP1CmD,SAAMJ,YAAN,KAAoBE,OAAAhD,MASlBmD,kBAAmB,2CAGd,IAAMC,UAAAA,QAAAA,SAAAA,YAPPC,GACJN,iBAAiBD,EAAAA,aAAjBC,mBADQnD,KAAAE,UACRiD,MACAE,iBAAiBH,EAAAA,aAAjBG,mBAFQrD,KAAAG,UAERkD,MACAC,gBAAaJ,EAAbI,SAAAA,mBAHQtD,KAAAI,MAGRkD","file":"../../../../../felixhayashi/tiddlymap/js/lib/environment.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/lib/environment\ntype: application/javascript\n module-type: library\n\n@preserve\n\n\\*/\n\n/*** Code **********************************************************/\n\n/**\n * This module is responsible for registering a global namespace\n * under $tw and registering fundamental path variables.\n *\n * Everything that doesn't change when the global config object is\n * updated. This includes prefixes (paths) and tiddler titles.\n *\n * ATTENTION: The paths are deliberately written in full so they\n * are discovered when a search is performed over the TiddlyMap code.\n */\n\n// **ATTENTION: NO TRAILING SLASHES IN PATHS EVER**\nexport const path = {\n  pluginRoot:      '$:/plugins/felixhayashi/tiddlymap',\n  edgeTypes:       '$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes',\n  nodeTypes:       '$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes',\n  views:           '$:/plugins/felixhayashi/tiddlymap/graph/views',\n  options:         '$:/plugins/felixhayashi/tiddlymap/config',\n  dialogs:         '$:/plugins/felixhayashi/tiddlymap/dialog',\n  footers:         '$:/plugins/felixhayashi/tiddlymap/dialogFooter',\n  tempRoot:        '$:/temp/tmap',\n  tempStates:      '$:/temp/tmap/state',\n  tempPopups:      '$:/temp/tmap/state/popup',\n  localHolders:    '$:/temp/tmap/holders'\n};\n\n// static references to important tiddlers\nexport const ref = {\n  defaultViewHolder:  '$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder',\n  graphBar:           '$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar',\n  sysUserConf:        '$:/plugins/felixhayashi/tiddlymap/config/sys/user',\n  visUserConf:        '$:/plugins/felixhayashi/tiddlymap/config/vis/user',\n  welcomeFlag:        '$:/plugins/felixhayashi/tiddlymap/flag/welcome',\n  focusButton:        '$:/plugins/felixhayashi/tiddlymap/misc/focusButton',\n  sysMeta:            '$:/plugins/felixhayashi/tiddlymap/misc/meta',\n  liveTab:            '$:/plugins/felixhayashi/tiddlymap/hook/liveTab',\n  mainEditor:         '$:/plugins/felixhayashi/tiddlymap/hook/editor',\n  sidebarBreakpoint:  '$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint'\n};\n\n// some other options\nexport const misc = {\n  // if no edge label is specified, this is used as label\n  unknownEdgeLabel: 'tmap:undefined',\n  liveViewLabel: 'Live View',\n  defaultViewLabel: 'Default',\n  mainEditorId: 'main_editor',\n  arrows: { 'in': '⇦', 'out': '➡', 'bi': '⇄' }\n};\n\nexport const config = {\n  sys: {\n    field: {\n      nodeLabel: 'caption',\n      nodeIcon: 'icon',\n      nodeInfo: 'description',\n      viewMarker: 'isview'\n    },\n    liveTab: {\n      fallbackView: misc.liveViewLabel\n    },\n    suppressedDialogs: {},\n    edgeClickBehaviour: 'manager',\n    debug: 'false',\n    notifications: 'true',\n    popups: {\n      enabled: 'true',\n      delay: '600',\n      width: '240px',\n      height: '140px'\n    },\n    jsonIndentation: '1',\n    editNodeOnCreate: 'false',\n    singleClickMode: 'false',\n    editorMenuBar: {\n      showNeighScopeButton: 'true',\n      showRasterMenuButton: 'true',\n      showScreenshotButton: 'true'\n    }\n  }\n};\n\n// some popular filters\nexport const filter = {\n  nodeTypes: `[prefix[${path.nodeTypes}]]`,\n  edgeTypes: `[prefix[${path.edgeTypes}]]`,\n  views: `[${config.sys.field.viewMarker}[true]]`,\n  defaultEdgeTypeFilter: '-[prefix[_]] -[[tw-body:link]] -[[tw-list:tags]] -[[tw-list:list]]'\n};\n\nconst allSelector = '[all[tiddlers+shadows]!has[draft.of]]';\n\n// some popular selectors\n// usually used from within tiddlers via the tmap macro\n\nconst s = {\n  allEdgeTypes: `${allSelector} +${filter.edgeTypes}`,\n  allNodeTypes: `${allSelector} +${filter.nodeTypes}`,\n  allViews: `${allSelector} +${filter.views}`,\n  allPotentialNodes: '[all[tiddlers]!is[system]!has[draft.of]]',\n};\n\nexport const selector = {\n  ...s,\n  allEdgeTypesById: `${s.allEdgeTypes} +[removeprefix[${path.edgeTypes}/]]`,\n  allNodeTypesById: `${s.allNodeTypes} +[removeprefix[${path.nodeTypes}/]]`,\n  allViewsByLabel: `${s.allViews} +[removeprefix[${path.views}/]]`,\n};\n"],"sourceRoot":"../../../../../../src/plugins"}