{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/exceptions.js"],"names":["TiddlyMapError","message","payload","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","Error","EnvironmentError","aspect","DependencyError","dep","MissingOverrideError","context","methodName","constructor","name","ResourceNotFoundException","resourceType","_len","arguments","length","Array","_key","InvalidArgumentException","_len2","_key2"],"mappings":";;;;;;;;;;;GAAAA,0CAqBE,SAAAA,GAAYC,EAASC,GAASC,gBAAAC,KAAAJ,EAAA,IAAAK,GAAAC,2BAAAF,MAAAJ,EAAAO,WAAAC,OAAAC,eAAAT,IAAAU,KAAAN,KACtBH,GACNI,GAAKH,QAAUA,CAFa,OAAAG,wDAM5B,MAAOD,MAAKF,sBA3BhBS,UAmCaC,0BAAAA,2CAdX,SAAAA,GAAAC,GAAAV,gBAAAC,KAAAQ,EAAA,OAAAN,4BAAAF,MAAAQ,EAAAL,WAAAC,OAAAC,eAAAG,IAAAF,KAAAN,KAAA,oDAA8BS,cAcMb,mBASzBc,yBAAAA,0CACX,SAAAA,GAAYC,GAAKZ,gBAAAC,KAAAU,EAAA,OAAAR,4BAAAF,MAAAU,EAAAP,WAAAC,OAAAC,eAAAK,IAAAJ,KAAAN,KAAA,mCAC0BW,cAFRf,mBASxBgB,8BAAAA,+CACX,SAAAA,GAAYC,EAASC,GAAYf,gBAAAC,KAAAY,EAAA,OAAAV,4BAAAF,MAAAY,EAAAT,WAAAC,OAAAC,eAAAO,IAAAN,KAAAN,KAtBnCa,EAAAE,YAAAC,KAsBmC,8BAtBnCF,EAsBmC,gBADOlB,mBAjBxCqB,mCAAAA,oDAiCA,SAAAA,GAAYC,GAA0BnB,gBAAAC,KAAAiB,EAAA,KAAA,GAAAE,GAAAC,UAAAC,OAATvB,EAASwB,MAAAH,EAAA,EAAAA,EAAA,EAAA,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAA,CAATzB,EAASyB,EAAA,GAAAH,UAAAG,GAAA,MAAArB,4BAAAF,MAAAiB,EAAAd,WAAAC,OAAAC,eAAAY,IAAAX,KAAAN,KAAA,kBACZkB,EAAgBpB,cAlCtBF,mBA2CT4B,kCAAAA,mDAlCX,SAAAA,KAAAzB,gBAAAC,KAAAwB,EAAA,KAAA,GAAAC,GAAAL,UAAAC,OAAAvB,EAAAwB,MAAAG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAAA5B,EAAA4B,GAAAN,UAAAM,GAAA,MAAAxB,4BAAAF,MAAAwB,EAAArB,WAAAC,OAAAC,eAAAmB,IAAAlB,KAAAN,KAAiB,uCAAAF,cAkC2BF","file":"../../../../../felixhayashi/tiddlymap/js/lib/exceptions.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/exception\ntype: application/javascript\nmodule-type: library\n\n@preserve\n\n\\*/\n\n/**\n * Base class for all Exceptions in TiddlyMap\n */\nclass TiddlyMapError extends Error {\n\n  /**\n   *\n   * @param {string} message\n   * @param {array} payload\n   */\n  constructor(message, payload) {\n    super(message);\n    this.payload = payload;\n  }\n\n  getPayload() {\n    return this.payload;\n  }\n\n}\n\n/**\n * Thrown if a css or dom structure is not present but was expected by TiddlyMap.\n */\nexport class EnvironmentError extends TiddlyMapError {\n  constructor(aspect) {\n    super(`Critical parts of the underlying system changed: ${aspect}`);\n  };\n}\n\n/**\n * Thrown if a plugin or any other kind of required dependency is missing.\n */\nexport class DependencyError extends TiddlyMapError {\n  constructor(dep) {\n    super(`TiddlyMap cannot run without: : ${dep}`);\n  };\n}\n\n/**\n * Thrown if an interface method is not fully implemented.\n */\nexport class MissingOverrideError extends TiddlyMapError {\n  constructor(context, methodName) {\n    super(`${context.constructor.name} does not override method \"${methodName}\"`);\n  };\n}\n\n/**\n * Thrown if a resource such as a node, edge, view, tiddler etc. cannot be located\n * in the system.\n */\nexport class ResourceNotFoundException extends TiddlyMapError {\n\n  /**\n   * @param {string} resourceType\n   * @param {*} payload\n   */\n  constructor(resourceType, ...payload) {\n    super(`Cannot resolve ${resourceType}`, payload);\n  };\n\n}\n\n/**\n * Thrown if a resource such as a node, edge, view, tiddler etc. cannot be located\n * in the system.\n */\nexport class InvalidArgumentException extends TiddlyMapError {\n  constructor(...payload) {\n    super('Invalid or missing argument provided', payload);\n  };\n}\n"],"sourceRoot":"../../../../../../src/plugins"}